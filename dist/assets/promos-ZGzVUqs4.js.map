{"version":3,"file":"promos-ZGzVUqs4.js","sources":["../../src/lib/promos.ts"],"sourcesContent":["import { api } from './api';\n\nexport interface PromoCode {\n  _id: string;\n  code: string;\n  description?: string;\n  discountType: 'percentage' | 'fixed';\n  discountValue: number;\n  minimumOrderAmount: number;\n  maximumDiscountAmount?: number;\n  usageLimit?: number;\n  usedCount: number;\n  isActive: boolean;\n  validFrom: string;\n  validUntil: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface CreatePromoCodeData {\n  code: string;\n  description?: string;\n  discountType: 'percentage' | 'fixed';\n  discountValue: number;\n  minimumOrderAmount?: number;\n  maximumDiscountAmount?: number;\n  usageLimit?: number;\n  isActive?: boolean;\n  validFrom: string;\n  validUntil: string;\n}\n\nexport interface PromoValidationResult {\n  code: string;\n  description?: string;\n  discountType: 'percentage' | 'fixed';\n  discountValue: number;\n  discountAmount: number;\n  finalAmount: number;\n}\n\nexport const validatePromoCode = async (code: string, orderAmount: number): Promise<PromoValidationResult> => {\n  const response = await api.validatePromoCode(code, orderAmount);\n  if (response.success && response.data) {\n    return response.data;\n  }\n  throw new Error(response.message || 'Invalid promo code');\n};\n\nexport const createPromoCode = async (promoData: CreatePromoCodeData): Promise<PromoCode> => {\n  const response = await api.createPromoCode(promoData);\n  if (response.success && response.data) {\n    return response.data;\n  }\n  throw new Error(response.message || 'Failed to create promo code');\n};\n\nexport const updatePromoCode = async (id: string, promoData: Partial<CreatePromoCodeData>): Promise<PromoCode> => {\n  const response = await api.updatePromoCode(id, promoData);\n  if (response.success && response.data) {\n    return response.data;\n  }\n  throw new Error(response.message || 'Failed to update promo code');\n};\n\nexport const deletePromoCode = async (id: string): Promise<void> => {\n  const response = await api.deletePromoCode(id);\n  if (!response.success) {\n    throw new Error(response.message || 'Failed to delete promo code');\n  }\n};\n\nexport const togglePromoCodeStatus = async (id: string): Promise<PromoCode> => {\n  const response = await api.togglePromoCodeStatus(id);\n  if (response.success && response.data) {\n    return response.data;\n  }\n  throw new Error(response.message || 'Failed to toggle promo code status');\n};"],"names":["validatePromoCode","code","orderAmount","response","api","createPromoCode","promoData","deletePromoCode","id","togglePromoCodeStatus"],"mappings":"wCAyCO,MAAMA,EAAoB,MAAOC,EAAcC,IAAwD,CAC5G,MAAMC,EAAW,MAAMC,EAAI,kBAAkBH,EAAMC,CAAW,EAC9D,GAAIC,EAAS,SAAWA,EAAS,KAC/B,OAAOA,EAAS,KAElB,MAAM,IAAI,MAAMA,EAAS,SAAW,oBAAoB,CAC1D,EAEaE,EAAkB,MAAOC,GAAuD,CAC3F,MAAMH,EAAW,MAAMC,EAAI,gBAAgBE,CAAS,EACpD,GAAIH,EAAS,SAAWA,EAAS,KAC/B,OAAOA,EAAS,KAElB,MAAM,IAAI,MAAMA,EAAS,SAAW,6BAA6B,CACnE,EAUaI,EAAkB,MAAOC,GAA8B,CAClE,MAAML,EAAW,MAAMC,EAAI,gBAAgBI,CAAE,EAC7C,GAAI,CAACL,EAAS,QACZ,MAAM,IAAI,MAAMA,EAAS,SAAW,6BAA6B,CAErE,EAEaM,EAAwB,MAAOD,GAAmC,CAC7E,MAAML,EAAW,MAAMC,EAAI,sBAAsBI,CAAE,EACnD,GAAIL,EAAS,SAAWA,EAAS,KAC/B,OAAOA,EAAS,KAElB,MAAM,IAAI,MAAMA,EAAS,SAAW,oCAAoC,CAC1E"}