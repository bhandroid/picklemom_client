{"version":3,"file":"useProducts-CbU5Wv6e.js","sources":["../../src/hooks/useProducts.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { api } from '../lib/api';\n\n// Simple Product interface for this hook\ninterface Product {\n  _id: string;\n  id: string; // Add computed id field for compatibility\n  name: string;\n  description?: string;\n  price: number;\n  image?: string;\n  category?: string;\n  stock?: number;\n  featured?: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport function useProducts() {\n  const [products, setProducts] = useState<Product[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchProducts = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      console.log('üîÑ Fetching products from MongoDB...');\n      const response = await api.getProducts();\n      \n      if (response.success && response.data) {\n        // Transform products to include id field for compatibility\n        const transformedProducts = response.data.map(product => ({\n          ...product,\n          id: product._id, // Add id field for compatibility with existing components\n        }));\n        setProducts(transformedProducts);\n        console.log('‚úÖ Products fetched successfully:', transformedProducts.length);\n      } else {\n        throw new Error('Failed to fetch products');\n      }\n    } catch (err) {\n      console.error('‚ùå Error fetching products:', err);\n      setError(err instanceof Error ? err.message : 'Failed to fetch products');\n      setProducts([]); // Set empty array on error\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n\n  const retry = () => {\n    fetchProducts();\n  };\n\n  return { products, loading, error, retry, refetch: fetchProducts };\n}\n\nexport function useProduct(id: string) {\n  const [product, setProduct] = useState<Product | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchProduct = async () => {\n      if (!id) {\n        setLoading(false);\n        return;\n      }\n      \n      try {\n        setLoading(true);\n        setError(null);\n        \n        console.log('üîÑ Fetching product by ID:', id);\n        const response = await api.getProduct(id);\n        \n        if (response.success && response.data) {\n          const transformedProduct = {\n            ...response.data,\n            id: response.data._id, // Add id field for compatibility\n          };\n          setProduct(transformedProduct);\n          console.log('‚úÖ Product fetched successfully:', transformedProduct.name);\n        } else {\n          throw new Error('Product not found');\n        }\n      } catch (err) {\n        console.error('‚ùå Error fetching product:', err);\n        setError(err instanceof Error ? err.message : 'Failed to fetch product');\n        setProduct(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProduct();\n  }, [id]);\n\n  return { product, loading, error };\n}"],"names":["useProducts","products","setProducts","useState","loading","setLoading","error","setError","fetchProducts","response","api","transformedProducts","product","err","useEffect"],"mappings":"qCAkBO,SAASA,GAAc,CAC5B,KAAM,CAACC,EAAUC,CAAW,EAAIC,EAAAA,SAAoB,CAAA,CAAE,EAChD,CAACC,EAASC,CAAU,EAAIF,EAAAA,SAAS,EAAI,EACrC,CAACG,EAAOC,CAAQ,EAAIJ,EAAAA,SAAwB,IAAI,EAEhDK,EAAgB,SAAY,CAChC,GAAI,CACFH,EAAW,EAAI,EACfE,EAAS,IAAI,EAEb,QAAQ,IAAI,sCAAsC,EAClD,MAAME,EAAW,MAAMC,EAAI,YAAA,EAE3B,GAAID,EAAS,SAAWA,EAAS,KAAM,CAErC,MAAME,EAAsBF,EAAS,KAAK,IAAIG,IAAY,CACxD,GAAGA,EACH,GAAIA,EAAQ,GAAA,EACZ,EACFV,EAAYS,CAAmB,EAC/B,QAAQ,IAAI,mCAAoCA,EAAoB,MAAM,CAAA,KAE1E,OAAM,IAAI,MAAM,0BAA0B,CAC5C,OACOE,EAAK,CACZ,QAAQ,MAAM,6BAA8BA,CAAG,EAC/CN,EAASM,aAAe,MAAQA,EAAI,QAAU,0BAA0B,EACxEX,EAAY,CAAA,CAAE,CAAA,QAChB,CACEG,EAAW,EAAK,CAAA,CAClB,EAGFS,OAAAA,EAAAA,UAAU,IAAM,CACdN,EAAA,CAAc,EACb,EAAE,EAME,CAAE,SAAAP,EAAU,QAAAG,EAAS,MAAAE,EAAO,MAJrB,IAAM,CAClBE,EAAA,CAAc,EAG0B,QAASA,CAAA,CACrD"}